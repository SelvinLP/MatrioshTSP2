"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Func_native = void 0;
var Generador_1 = require("./Generador");
var Func_native = /** @class */ (function () {
    function Func_native() {
    }
    Func_native.prototype.getImprimircad = function () {
        var generador = Generador_1.Generador.getInstancia();
        var etiq0 = generador.newEtiq();
        var etiq1 = generador.newEtiq();
        var etiq2 = generador.newEtiq();
        var tem0 = generador.newTem();
        var tem1 = generador.newTem();
        var retorn = "";
        retorn += 'void native_imprimir() {\n';
        retorn += "  " + etiq0 + ":\n";
        retorn += "  " + tem1 + " =  heap[(int)" + tem0 + "];\n";
        retorn += "  " + tem0 + " = " + tem0 + " + 1;\n";
        retorn += "  if (" + tem1 + " != -1) goto " + etiq1 + ";\n";
        retorn += "  goto " + etiq2 + ';\n';
        retorn += "  " + etiq1 + ":\n";
        retorn += "  printf(\"%c\", (int)" + tem1 + ");\n";
        retorn += "  goto " + etiq0 + ';\n';
        retorn += "  " + etiq2 + ":\n";
        retorn += "  return;\n";
        retorn += '}\n';
        return retorn;
    };
    Func_native.prototype.concat_string_string = function () {
        var generador = Generador_1.Generador.getInstancia();
        var etiq3 = generador.newEtiq();
        var etiq4 = generador.newEtiq();
        var etiq5 = generador.newEtiq();
        var etiq6 = generador.newEtiq();
        var etiq7 = generador.newEtiq();
        var tem2 = generador.newTem();
        var tem3 = generador.newTem();
        var tem4 = generador.newTem();
        var tem5 = generador.newTem();
        var tem6 = generador.newTem();
        var retorn = "";
        retorn += 'void concat_string_string() {\n';
        retorn += "  " + tem2 + " = h;\n";
        retorn += "  " + etiq3 + ":\n";
        retorn += "  " + tem4 + " = heap[(int)" + tem3 + "];\n";
        retorn += "  " + tem3 + " = " + tem3 + " + 1;\n";
        retorn += "  if (" + tem4 + " != -1) goto " + etiq4 + ";\n";
        retorn += "  goto " + etiq5 + ';\n';
        retorn += "  " + etiq4 + ":\n";
        retorn += "  heap[(int)h] = " + tem4 + ";\n";
        retorn += "  h = h + 1;\n";
        retorn += "  goto " + etiq3 + ';\n';
        retorn += "  " + etiq5 + ":\n";
        retorn += "  " + tem6 + "= heap[(int)" + tem5 + "];\n";
        retorn += "  " + tem5 + " = " + tem5 + " + 1;\n";
        retorn += "  if (" + tem6 + " != -1) goto " + etiq6 + ";\n";
        retorn += "  goto " + etiq7 + ';\n';
        retorn += "  " + etiq6 + ":\n";
        retorn += "  heap[(int)h] = " + tem6 + ";\n";
        retorn += "  h = h + 1;\n";
        retorn += "  goto " + etiq5 + ';\n';
        retorn += "  " + etiq7 + ":\n";
        retorn += "  heap[(int)h] = -1;\n";
        retorn += "  h = h + 1;\n";
        retorn += "  return;\n";
        retorn += '}\n';
        return retorn;
    };
    Func_native.prototype.compare_str_str = function () {
        var generador = Generador_1.Generador.getInstancia();
        var etiq8 = generador.newEtiq();
        var etiq9 = generador.newEtiq();
        var etiq10 = generador.newEtiq();
        var etiq11 = generador.newEtiq();
        var etiq12 = generador.newEtiq();
        var etiq13 = generador.newEtiq();
        var tem7 = generador.newTem();
        var tem8 = generador.newTem();
        var tem9 = generador.newTem();
        var tem10 = generador.newTem();
        var tem11 = generador.newTem();
        var retorn = "";
        retorn += 'void native_cmp_str() {\n';
        retorn += "  " + etiq8 + ":\n";
        retorn += "  " + tem9 + " =  heap[(int)" + tem7 + "];\n";
        retorn += "  " + tem10 + " =  heap[(int)" + tem8 + "];\n";
        retorn += "  " + tem7 + " = " + tem7 + " + 1;\n";
        retorn += "  " + tem8 + " = " + tem8 + " + 1;\n";
        retorn += "  if (" + tem9 + " == " + tem10 + ") goto " + etiq9 + ";\n";
        retorn += "  goto " + etiq10 + ';\n';
        retorn += "  " + etiq9 + ":\n";
        retorn += "  if (" + tem9 + " == -1) goto " + etiq11 + ";\n";
        retorn += "  goto " + etiq8 + ';\n';
        retorn += "  " + etiq11 + ":\n";
        retorn += "  if (" + tem10 + " == -1) goto " + etiq12 + ";\n";
        retorn += "  goto " + etiq8 + ';\n';
        retorn += "  " + etiq12 + ":\n";
        retorn += "  " + tem11 + " = 1;\n";
        retorn += "  goto " + etiq13 + ';\n';
        retorn += "  " + etiq10 + ":\n";
        retorn += "  " + tem11 + " = 0;\n";
        retorn += "  goto " + etiq13 + ';\n';
        retorn += "  " + etiq13 + ":\n";
        retorn += "  return;\n";
        retorn += '}\n';
        return retorn;
    };
    Func_native.prototype.getpot = function () {
        var generador = Generador_1.Generador.getInstancia();
        var etiq14 = generador.newEtiq();
        var etiq15 = generador.newEtiq();
        var etiq16 = generador.newEtiq();
        var etiq17 = generador.newEtiq();
        var etiq18 = generador.newEtiq();
        var tem12 = generador.newTem();
        var tem13 = generador.newTem();
        var tem14 = generador.newTem();
        var retorn = "";
        retorn += 'void native_pot() {\n';
        retorn += "  " + tem12 + " = 1;\n";
        retorn += "  if (" + tem14 + " > 0) goto " + etiq14 + ";\n";
        retorn += "  goto " + etiq15 + ';\n';
        retorn += "  " + etiq14 + ":\n";
        retorn += "  if (" + tem14 + " > 0) goto " + etiq16 + ";\n";
        retorn += "  goto " + etiq17 + ';\n';
        retorn += "  " + etiq16 + ":\n";
        retorn += "  " + tem12 + " = " + tem12 + " * " + tem13 + ";\n";
        retorn += "  " + tem14 + " = " + tem14 + " - 1;\n";
        retorn += "  goto " + etiq14 + ';\n';
        retorn += "  " + etiq15 + ":\n";
        retorn += "  if (" + tem14 + " < 0) goto " + etiq18 + ";\n";
        retorn += "  goto " + etiq17 + ';\n';
        retorn += "  " + etiq18 + ":\n";
        retorn += "  " + tem12 + " = " + tem12 + " / " + tem13 + ";\n";
        retorn += "  " + tem14 + " = " + tem14 + " + 1;\n";
        retorn += "  goto " + etiq15 + ';\n';
        retorn += "  " + etiq17 + ":\n";
        retorn += "  return;\n";
        retorn += '}\n';
        return retorn;
    };
    Func_native.prototype.number_tostring = function () {
        var generador = Generador_1.Generador.getInstancia();
        var etiq19 = generador.newEtiq();
        var etiq20 = generador.newEtiq();
        var etiq21 = generador.newEtiq();
        var etiq22 = generador.newEtiq();
        var etiq23 = generador.newEtiq();
        var etiq24 = generador.newEtiq();
        var etiq25 = generador.newEtiq(); //etiqueta del signo 
        var etiq26 = generador.newEtiq();
        var tem15 = generador.newTem(); //entrada
        var tem16 = generador.newTem(); // retorno h
        var tem17 = generador.newTem();
        var tem18 = generador.newTem(); // temporal
        var tem19 = generador.newTem(); // contador
        var tem20 = generador.newTem(); // temporal
        var tem21 = generador.newTem(); // contador 2
        var retorn = "";
        retorn += 'void number_tostring() {\n';
        retorn += "  " + tem16 + " = h;\n";
        retorn += "  if (" + tem15 + " < 0) goto " + etiq25 + ";\n";
        retorn += "  goto " + etiq26 + ';\n';
        retorn += "  " + etiq25 + ":\n";
        retorn += "  " + tem15 + " = " + tem15 + " * -1;\n";
        retorn += "  heap[(int)h] = 45;\n";
        retorn += "  h = h + 1;\n";
        retorn += "  goto " + etiq26 + ';\n';
        retorn += "  " + etiq26 + ":\n";
        retorn += "  " + tem17 + " = fmod(" + tem15 + ",1);\n";
        retorn += "  " + tem15 + " = " + tem15 + " - " + tem17 + ";\n";
        retorn += "  " + tem18 + " = " + tem15 + ";\n";
        retorn += "  " + tem19 + " = -1;\n";
        retorn += "  " + tem20 + " = 0;\n";
        retorn += "  " + etiq19 + ":\n";
        retorn += "  " + tem19 + " = " + tem19 + " + 1;\n";
        retorn += "  " + tem21 + " = " + tem19 + ";\n";
        retorn += "  " + tem18 + " = " + tem18 + " / 10;\n";
        retorn += "  " + tem20 + " = fmod(" + tem18 + ",1);\n";
        retorn += "  " + tem18 + " = " + tem18 + " - " + tem20 + ";\n";
        retorn += "  if (" + tem18 + " > 0) goto " + etiq19 + ";\n";
        retorn += "  goto " + etiq20 + ';\n';
        retorn += "  " + etiq20 + ":\n";
        retorn += "  " + tem15 + " = " + tem15 + " / 10;\n";
        retorn += "  " + tem18 + " = fmod(" + tem15 + ",1);\n";
        retorn += "  " + tem15 + " = " + tem15 + " - " + tem18 + ";\n";
        retorn += "  " + tem18 + " = " + tem18 + " * 10;\n";
        retorn += "  " + tem18 + " = " + tem18 + " + 48;\n";
        retorn += "  h = h + " + tem19 + ";\n";
        retorn += "  heap[(int)h] = (int)" + tem18 + ";\n";
        retorn += "  h = h - " + tem19 + ";\n";
        retorn += "  " + tem19 + " = " + tem19 + " - 1;\n";
        retorn += "  if (" + tem15 + " > 0.1) goto " + etiq20 + ";\n";
        retorn += "  goto " + etiq21 + ';\n';
        retorn += "  " + etiq21 + ":\n";
        retorn += "  h = h + " + tem21 + ";\n";
        retorn += "  h = h + 1;\n";
        retorn += "  if (" + tem17 + " > 0) goto " + etiq22 + ";\n";
        retorn += "  goto " + etiq23 + ';\n';
        retorn += "  " + etiq22 + ":\n";
        retorn += "  heap[(int)h] = 46;\n";
        retorn += "  h = h + 1;\n";
        retorn += "  goto " + etiq24 + ';\n';
        retorn += "  " + etiq24 + ":\n";
        retorn += "  " + tem17 + " = " + tem17 + " * 10;\n";
        retorn += "  " + tem20 + " = fmod(" + tem17 + ",1);\n";
        retorn += "  " + tem17 + " = " + tem17 + " - " + tem20 + ";\n";
        retorn += "  " + tem17 + " = " + tem17 + " + 48;\n";
        retorn += "  heap[(int)h] = " + tem17 + ";\n";
        retorn += "  h = h + 1;\n";
        retorn += "  " + tem17 + " = " + tem20 + ";\n";
        retorn += "  if (" + tem17 + " > 0.001) goto " + etiq24 + ";\n";
        retorn += "  goto " + etiq23 + ';\n';
        retorn += "  " + etiq23 + ":\n";
        retorn += "  heap[(int)h] = -1;\n";
        retorn += "  h = h + 1;\n";
        retorn += "  return;\n";
        retorn += '}\n';
        return retorn;
    };
    Func_native.prototype.tolowercase_str = function () {
        var generador = Generador_1.Generador.getInstancia();
        var etiq27 = generador.newEtiq();
        var etiq28 = generador.newEtiq();
        var etiq29 = generador.newEtiq();
        var etiq30 = generador.newEtiq();
        var etiq31 = generador.newEtiq();
        var tem22 = generador.newTem(); // Entrada por de h
        var tem23 = generador.newTem();
        var retorn = "";
        retorn += 'void tolowercase_str() {\n';
        retorn += "  " + etiq27 + ":\n";
        retorn += "  " + tem23 + " =  heap[(int)" + tem22 + "];\n";
        retorn += "  " + tem22 + " = " + tem22 + " + 1;\n";
        retorn += "  if (" + tem23 + " != -1) goto " + etiq28 + ";\n";
        retorn += "  goto " + etiq29 + ';\n';
        retorn += "  " + etiq28 + ":\n";
        retorn += "  if (" + tem23 + " >= 65) goto " + etiq30 + ";\n";
        retorn += "  goto " + etiq27 + ';\n';
        retorn += "  " + etiq30 + ":\n";
        retorn += "  if (" + tem23 + " <= 90) goto " + etiq31 + ";\n";
        retorn += "  goto " + etiq27 + ';\n';
        retorn += "  " + etiq31 + ":\n";
        retorn += "  " + tem23 + " = " + tem23 + " + 32;\n";
        retorn += "  " + tem22 + " = " + tem22 + " - 1;\n";
        retorn += "  heap[(int)" + tem22 + "] = " + tem23 + ";\n";
        retorn += "  " + tem22 + " = " + tem22 + " + 1;\n";
        retorn += "  goto " + etiq27 + ';\n';
        retorn += "  " + etiq29 + ":\n";
        retorn += "  return;\n";
        retorn += '}\n';
        return retorn;
    };
    Func_native.prototype.touppercase_str = function () {
        var generador = Generador_1.Generador.getInstancia();
        var etiq32 = generador.newEtiq();
        var etiq33 = generador.newEtiq();
        var etiq34 = generador.newEtiq();
        var etiq35 = generador.newEtiq();
        var etiq36 = generador.newEtiq();
        var tem24 = generador.newTem(); // Entrada por de h
        var tem25 = generador.newTem();
        var retorn = "";
        retorn += 'void touppercase_str() {\n';
        retorn += "  " + etiq32 + ":\n";
        retorn += "  " + tem25 + " =  heap[(int)" + tem24 + "];\n";
        retorn += "  " + tem24 + " = " + tem24 + " + 1;\n";
        retorn += "  if (" + tem25 + " != -1) goto " + etiq33 + ";\n";
        retorn += "  goto " + etiq34 + ';\n';
        retorn += "  " + etiq33 + ":\n";
        retorn += "  if (" + tem25 + " >= 97) goto " + etiq35 + ";\n";
        retorn += "  goto " + etiq32 + ';\n';
        retorn += "  " + etiq35 + ":\n";
        retorn += "  if (" + tem25 + " <= 122) goto " + etiq36 + ";\n";
        retorn += "  goto " + etiq32 + ';\n';
        retorn += "  " + etiq36 + ":\n";
        retorn += "  " + tem25 + " = " + tem25 + " - 32;\n";
        retorn += "  " + tem24 + " = " + tem24 + " - 1;\n";
        retorn += "  heap[(int)" + tem24 + "] = " + tem25 + ";\n";
        retorn += "  " + tem24 + " = " + tem24 + " + 1;\n";
        retorn += "  goto " + etiq32 + ';\n';
        retorn += "  " + etiq34 + ":\n";
        retorn += "  return;\n";
        retorn += '}\n';
        return retorn;
    };
    Func_native.prototype.getlength_str = function () {
        var generador = Generador_1.Generador.getInstancia();
        var etiq37 = generador.newEtiq();
        var tem26 = generador.newTem(); // Entrada por de h
        var tem27 = generador.newTem(); // Contador  
        var tem28 = generador.newTem(); // Temporal
        var retorn = "";
        retorn += 'void length_str() {\n';
        retorn += "  " + tem27 + " = -1;\n";
        retorn += "  " + etiq37 + ":\n";
        retorn += "  " + tem27 + " = " + tem27 + " + 1;\n";
        retorn += "  " + tem28 + " =  heap[(int)" + tem26 + "];\n";
        retorn += "  " + tem26 + " = " + tem26 + " + 1;\n";
        retorn += "  if (" + tem28 + " != -1) goto " + etiq37 + ";\n";
        retorn += "  return;\n";
        retorn += '}\n';
        return retorn;
    };
    Func_native.prototype.getImprimirctrue = function () {
        var retorn = "";
        retorn += 'void native_imprimir_true() {\n';
        retorn += "  printf(\"%c\", " + 't'.charCodeAt(0) + ");\n";
        retorn += "  printf(\"%c\", " + 'r'.charCodeAt(0) + ");\n";
        retorn += "  printf(\"%c\", " + 'u'.charCodeAt(0) + ");\n";
        retorn += "  printf(\"%c\", " + 'e'.charCodeAt(0) + ");\n";
        retorn += '}\n';
        return retorn;
    };
    Func_native.prototype.getImprimircfalse = function () {
        var retorn = "";
        retorn += 'void native_imprimir_false() {\n';
        retorn += "  printf(\"%c\", " + 'f'.charCodeAt(0) + ");\n";
        retorn += "  printf(\"%c\", " + 'a'.charCodeAt(0) + ");\n";
        retorn += "  printf(\"%c\", " + 'l'.charCodeAt(0) + ");\n";
        retorn += "  printf(\"%c\", " + 's'.charCodeAt(0) + ");\n";
        retorn += "  printf(\"%c\", " + 'e'.charCodeAt(0) + ");\n";
        retorn += '}\n';
        return retorn;
    };
    Func_native.prototype.getImprimircnull = function () {
        var retorn = "";
        retorn += 'void native_imprimir_null() {\n';
        retorn += "  printf(\"%c\", " + 'n'.charCodeAt(0) + ");\n";
        retorn += "  printf(\"%c\", " + 'u'.charCodeAt(0) + ");\n";
        retorn += "  printf(\"%c\", " + 'l'.charCodeAt(0) + ");\n";
        retorn += "  printf(\"%c\", " + 'l'.charCodeAt(0) + ");\n";
        retorn += '}\n';
        return retorn;
    };
    return Func_native;
}());
exports.Func_native = Func_native;
